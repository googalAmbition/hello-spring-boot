<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN">
    <Properties>
        <Property name="LOG_EXCEPTION_CONVERSION_WORD">%xwEx</Property>
        <Property name="LOG_LEVEL_PATTERN">%5p</Property>
        <Property name="LOG_DATEFORMAT_PATTERN">yyyy-MM-dd HH:mm:ss.SSS</Property>
        <Property name="CONSOLE_LOG_PATTERN">%clr{%d{${sys:LOG_DATEFORMAT_PATTERN}}}{faint} %clr{${sys:LOG_LEVEL_PATTERN}} %clr{%pid}{magenta} %clr{---}{faint} %clr{[%15.15t]}{faint} %clr{%-40.40c{1.}}{cyan} %clr{:}{faint} %m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>
        <Property name="FILE_LOG_PATTERN">%d{${LOG_DATEFORMAT_PATTERN}} ${LOG_LEVEL_PATTERN} %pid --- [%t] %-40.40c{1.} : %m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>
    </Properties>
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT" follow="true">
            <PatternLayout pattern="${sys:CONSOLE_LOG_PATTERN}" charset="${sys:CONSOLE_LOG_CHARSET}"/>
        </Console>
    </Appenders>
    <Loggers>
        <Logger name="org.apache.catalina.startup.DigesterFactory" level="error" />
        <Logger name="org.apache.catalina.util.LifecycleBase" level="error" />
        <Logger name="org.apache.coyote.http11.Http11NioProtocol" level="warn" />
        <Logger name="org.apache.sshd.common.util.SecurityUtils" level="warn"/>
        <Logger name="org.apache.tomcat.util.net.NioSelectorPool" level="warn" />
        <Logger name="org.eclipse.jetty.util.component.AbstractLifeCycle" level="error" />
        <Logger name="org.hibernate.validator.internal.util.Version" level="warn" />
        <Logger name="org.springframework.boot.actuate.endpoint.jmx" level="warn"/>
        <Root level="info">
            <AppenderRef ref="Console" />
        </Root>
    </Loggers>
</Configuration>


        <!--<?xml version="1.0" encoding="UTF-8"?>-->
        <!--&lt;!&ndash;日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL &ndash;&gt;-->
        <!--&lt;!&ndash;Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 &ndash;&gt;-->
        <!--&lt;!&ndash;monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 &ndash;&gt;-->
        <!--<configuration status="WARN" monitorInterval="30">-->

        <!--    <Properties>-->
        <!--        &lt;!&ndash;你的日志目录，绝对路径 &ndash;&gt;-->
        <!--        <Property name="LOG_PATH" value="./"/>-->
        <!--    </Properties>-->

        <!--    &lt;!&ndash;定义所有的appender &ndash;&gt;-->
        <!--    <appenders>-->
        <!--        &lt;!&ndash;输出控制台的配置 &ndash;&gt;-->
        <!--        <console name="Console" target="SYSTEM_OUT" follow="false">-->
        <!--            &lt;!&ndash;输出日志的格式 &ndash;&gt;-->
        <!--            <PatternLayout charset="UTF-8"-->
        <!--                           pattern="[%date{yyyy-MM-dd HH:mm:ss.SSS}] %level [%thread][%file:%line] - %msg%n"/>-->
        <!--        </console>-->

        <!--        &lt;!&ndash; 打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 &ndash;&gt;-->
        <!--        <RollingFile name="RollingFileInfo" fileName="${LOG_PATH}/info.log"-->
        <!--                     filePattern="${LOG_PATH}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">-->
        <!--            &lt;!&ndash;控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） &ndash;&gt;-->
        <!--            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>-->
        <!--            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
        <!--            <Policies>-->
        <!--                &lt;!&ndash; 基于时间的触发策略。该策略主要是完成周期性的log文件封存工作 interval，integer型，指定两次封存动作之间的时间间隔;modulate，boolean型，说明是否对封存时间进行调制 &ndash;&gt;-->
        <!--                <TimeBasedTriggeringPolicy interval="4" modulate="true"/>-->
        <!--                <SizeBasedTriggeringPolicy size="100 MB"/>-->
        <!--            </Policies>-->
        <!--        </RollingFile>-->

        <!--        <RollingFile name="RollingFileWarn" fileName="${LOG_PATH}/warn.log"-->
        <!--                     filePattern="${LOG_PATH}/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">-->
        <!--            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>-->
        <!--            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
        <!--            <Policies>-->
        <!--                <TimeBasedTriggeringPolicy/>-->
        <!--                <SizeBasedTriggeringPolicy size="100 MB"/>-->
        <!--            </Policies>-->
        <!--            &lt;!&ndash; DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 &ndash;&gt;-->
        <!--            <DefaultRolloverStrategy max="20"/>-->
        <!--        </RollingFile>-->

        <!--        <RollingFile name="RollingFileError" fileName="${LOG_PATH}/error.log"-->
        <!--                     filePattern="${LOG_PATH}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">-->
        <!--            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>-->
        <!--            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
        <!--            <Policies>-->
        <!--                <TimeBasedTriggeringPolicy/>-->
        <!--                <SizeBasedTriggeringPolicy size="100 MB"/>-->
        <!--            </Policies>-->
        <!--        </RollingFile>-->
        <!--    </appenders>-->
        <!--    &lt;!&ndash;然后定义logger，只有定义了logger并引入的appender，appender才会生效 &ndash;&gt;-->
        <!--    <loggers>-->
        <!--        &lt;!&ndash;过滤掉spring和mybatis的一些无用的DEBUG信息 &ndash;&gt;-->

        <!--        <logger name="org.springframework" level="info"/>-->
        <!--        <logger name="org.mybatis" level="debug"/>-->
        <!--        <root level="info" >-->
        <!--            <appender-ref ref="Console"/>-->
        <!--            <appender-ref ref="RollingFileInfo"/>-->
        <!--            <appender-ref ref="RollingFileWarn"/>-->
        <!--            <appender-ref ref="RollingFileError"/>-->
        <!--        </root>-->
        <!--    </loggers>-->
        <!--</configuration>-->
